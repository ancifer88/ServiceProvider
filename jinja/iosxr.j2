{% set node = nodes[inventory_hostname] %}
!
hostname {{inventory_hostname}}
domain name croclab.ru
!
interface Loopback0
 ipv4 address {{node.rid}}/32
!
interface MgmtEth0/0/CPU0/0
 description "OOB to MGMT Network"
 ipv4 address {{node.mgmt}} 255.255.255.0
 no shutdown
!
{% for intf,intf_attr in node.links.items() %}
{% if intf_attr.vlan is defined and intf_attr.vlan != 0 %}
interface {{intf}}
 description "{{ intf_attr.remote }}"
 encapsulation dot1q {{intf_attr.vlan}}
 ipv4 address {{intf_attr.ip}}
interface {{intf.split('.')[0]}}
 no shutdown
{% else %}
interface {{intf.split('.')[0]}}
 description "{{ intf_attr.remote }}"
 ipv4 address {{intf_attr.ip}}
 no shutdown
{% endif %}
{% endfor %}
!
router static
 address-family ipv4 unicast
  0.0.0.0/0 172.23.84.1
 !
!
route-policy ISIS_LEAK
   if destination in (172.16.0.0/24 eq 32) then
     pass
   endif
end-policy
!
router isis {{common.isis.process}}
net {{node.isis.net}}
is-type {{node.isis.level}}
set-overload-bit on-startup wait-for-bgp
address-family ipv4 unicast
  metric-style wide
  ispf
  mpls traffic-eng level-2-only
  mpls traffic-eng router-id Loopback0
{% if node.isis.propagate is defined %}
  propagate level 2 into level 1 route-policy {{ node.isis.propagate }}
{% endif %}
interface Loopback0
  passive
  address-family ipv4 unicast
{% if node.isis.lolvl is defined %}
  circuit-type {{node.isis.lolvl}}
{% endif %}
{% for intf,intf_attr in node.links.items()|sort %}
 interface {{intf}}
   point-to-point
{% if intf_attr.circuit_type is defined %}
   circuit-type {{intf_attr.circuit_type}}
{% endif %}
  address-family ipv4 unicast
   metric {{intf_attr.cost}}
{% if intf_attr.ldp is defined and intf_attr.ldp == 1  %}
   mpls ldp sync
{% endif %}
{% endfor %}
!
mpls ldp
 session protection
 address-family ipv4
  label
   local
    allocate for host-routes
{% for intf, intf_attr in node.links.items()|sort %}
{% if intf_attr.ldp is defined and intf_attr.ldp == 1  %}
 interface {{ intf }}
{% else %}
 no interface {{ intf }} 
{% endif %}
{% endfor %}
!
rsvp
{% for intf, intf_attr in node.links.items()|sort %}
{% if intf_attr.rsvp is defined and intf_attr.rsvp == 1  %}
 interface {{ intf }}
{% endif %}
{% else %}
 no interface {{ intf }}
{% endfor %}
!
mpls traffic-eng
reoptimize 30
{% for intf, intf_attr in node.links.items()|sort %}
{% if intf_attr.rsvp is defined and intf_attr.rsvp == 1  %}
 interface {{ intf }}
{% else %}
 no interface {{ intf }}
{% endif %}
{% endfor %}
!
group GR-LSP
 interface 'tunnel-te.*'
  ipv4 unnumbered Loopback0
  autoroute announce
  record-route
  path-option 1 dynamic
end-group
!
{% if node.rsvp is defined and node.rsvp !=1 %}
{% for rsvp_dst,rsvp_attr in node.rsvp.items()|sort %}
interface tunnel-{{ rsvp_attr.tun }}
 apply-group GR-LSP
 signalled-name {{ inventory_hostname }}-->{{ rsvp_dst }}
 destination {{ rsvp_attr.ip }}
{% endfor %}
{% endif%}
!
mpls oam
ssh server v2
ssh server logging
xml agent ssl
 iteration off
!
xml agent tty
 iteration off
!
netconf agent tty
!
end
!
