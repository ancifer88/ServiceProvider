{% set node = nodes[inventory_hostname] %}
system {
    host-name {{inventory_hostname}};
    no-redirects;
    root-authentication {
        encrypted-password "$6$zePqZ43t$tNLCSIkGiRZp0UCPA174/.I7kN8uCGbsQnjVJCz6Grr0xGFQ9ixkMVeM3pV5WZW1P9VWhrOMBVAynAqMJSOyc/"; ## SECRET-DATA
    }
    login {
        user croc {
            uid 2000;
            class super-user;
            authentication {
                encrypted-password "$6$I8oiCdkQ$OIRXVyUL06jVIcoq2gNgmdKolULGWx1lkPcSnnM2hGS5cx7W4Wxu5NBDDg95h7EpFPiwXJdjvxurxYlvUKWqT."; ## SECRET-DATA
                ssh-rsa "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgvPzT89KIHwCwSqasZLP90dIe3FuMzUHUzhc9GnQcn08m9cktCvVSOIJtSgV8pXIB+notkBiE3qLzpWqvwMr2Xj4nuiEntWj+MHjEZpDAgQm1FTsgF0Pyx+gYgoIjc5NE5+YTq07W6voEfFr4yAvYVUIjN7zREc9HOrlmhDxZxXOfziii09GczJ55B+K4Lv1HQHmKpgBmO3aVnVJKb8EKzVk2OYZ83N8KhiIrtSPihMC5GOoA5b3gdY6ktP+iJ9mNXcFAQd2OfQC2hBPk7BDwunep4Cz+dii+FSAqRn8Bb5lXUYjcG/VJEeRVibNAtgeepUSU5pjT/cZB9H4Ed0RR root@ssudilovsky-mob.croc.ru"; ## SECRET-DATA
            }
        }
    }
    services {
        ssh;
        telnet;
        netconf {
            ssh;
            traceoptions {
                file nc.txt size 1m world-readable;
                flag incoming;
            }
        }
    }
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any any;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
    }
}
#{#
#**************************************************
###         Interfaces configuration        ######
#**************************************************
#}
#interfaces {
#    fxp0 {
#        description "OOB to MGMT Network";
#        unit 0 {
#            family inet {
#                address {{node.mgmt}}/24;
#            }
#        }
#    }
#    lo0 {
#        unit 0 {
#            family inet {
#                address {{node.rid}}/32;
#            }
#        }
#    }
#}
#{% for intf,intf_attr in node.links.items()|sort %}
#{% set newintf = intf.split('.')[0] %}
#{% if oldintf is defined and oldintf = newintf %}
#        unit {{ intf_attr.vlan }} {
#            description "{{ intf_attr.remote }}"
#            vlan-id {{ intf_attr.vlan }};
#            family inet {
#                address {{ intf_attr.ip }}/{{ intf_attr.mask|default('31') }};
#            }
#        }
#{% else %}
#    {{ newintf }}
#{% endif %}
#{% if intf_attr.vlan is defined and intf_attr.vlan !=0 %}
#        vlan-tagging;
#	encapsulation flexible-ethernet-services;
#        unit {{ intf_attr.vlan }} {
#	    description "{{ intf_attr.remote }}"
#            vlan-id {{ intf_attr.vlan }};
#            family inet {
#                address {{ intf_attr.ip }}/{{ intf_attr.mask|default('31') }};
#            }
#        }
#{% else %}
#        unit 0 {
#	    description "{{ intf_attr.remote }}"
#            family inet {
#                address {{ intf_attr.ip }}/{{ intf_attr.mask|default('31') }};
#            }
#        }
#    }
#{% set oldintf = endintf %}
#{% endif %}
#{% endfor %}
#}
#**************************************************
###         Global Variables                ######
#**************************************************
#routing-options {
#    router-id {{ node.rid }};
#    autonomous-system {{ common.bgp.as }};
#}
#**************************************************
####                 ROUTING                ######
##**************************************************
#protocols {
#**************************************************
###                 OSPF                    ######
#**************************************************
#    ospf {
#        area {{ common.ospf.area }} {
#{%          for intf, intf_attr in node.links.items()|sort %}
#            interface {{ intf }} {
#                interface-type p2p;
#{%              if intf_attr.cost is defined %}
#                metric {{ intf_attr.cost }};
#{%              endif %}
#            }
#{%          endfor %}
#            interface lo0.0 {
#                passive;
#            }
#        }
#    }
#}
